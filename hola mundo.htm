<!DOCTYPE html>
<!-- saved from url=(0086)https://script.google.com/macros/s/AKfycbxVBhbg_Hn6MZPS1Y9k6hXbDGGlEyp2BktIyUQ8Fuc/dev -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="chromevox" content-script="no">
<link rel="stylesheet" href="./hola mundo_files/icon" nonce=""><link rel="stylesheet" href="./hola mundo_files/958408076-mae_html_css_ltr.css">
<script type="text/javascript" src="./hola mundo_files/1220786506-warden_bin_i18n_warden__es_419.js.descarga" nonce=""></script>
</head>
<body>
<table id="warning-bar-table" class="full_size" cellspacing="0" cellpadding="0"><tbody><tr><td><div id="warning" class="warning-bar" role="alert"><div class="warning-bar-content"><div id="warning-text">El creador de esta app no es Google, sino otro usuario.</div><br><a class="warning-link" href="http://www.google.com/accounts/TOS" target="_blank" aria-describedby="warning-text">Condiciones del Servicio</a></div></div></td></tr><tr><td style="height: 100%"><iframe id="sandboxFrame" allow="accelerometer *; ambient-light-sensor *; autoplay *; camera *; clipboard-read *; clipboard-write *; encrypted-media *; fullscreen *; geolocation *; gyroscope *; magnetometer *; microphone *; midi *; payment *; picture-in-picture *; screen-wake-lock *; speaker *; sync-xhr *; usb *; web-share *; vibrate *; vr *" sandbox="allow-downloads allow-forms allow-modals allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" src="./hola mundo_files/userCodeAppPanel.html">
</iframe>
</td></tr></tbody></table><script type="text/javascript" nonce="">
(function() {
var el = document.getElementById('sandboxFrame');
el.onload = function() {
goog.script.init("\x7b\x22functionNames\x22:\x5b\x22doGet\x22\x5d,\x22sandboxMode\x22:\x22IFRAME_SANDBOX\x22,\x22callbackTimeout\x22:390000,\x22deploymentId\x22:\x22AKfycbxVBhbg_Hn6MZPS1Y9k6hXbDGGlEyp2BktIyUQ8Fuc\x22,\x22eei\x22:\x22\x22,\x22sandboxHost\x22:\x22https:\/\/n-6xnwuoovorizp4kjq7a5nesdirucgma4fkaqxoa-0lu-script.googleusercontent.com\x22,\x22clientSideProperties\x22:\x7b\x22google.script.sandbox.mode\x22:\x22IFRAME_SANDBOX\x22,\x22google.script.host.origin\x22:\x22https:\/\/script.google.com\x22\x7d,\x22actionPrefix\x22:\x22\/macros\/s\/AKfycbxVBhbg_Hn6MZPS1Y9k6hXbDGGlEyp2BktIyUQ8Fuc\x22,\x22userHtml\x22:\x22\x3c!DOCTYPE html\x3e\\n\x3chtml lang\x3d\\\x22es\\\x22\x3e\\n\x3chead\x3e\\n  \x3cbase target\x3d\\\x22_top\\\x22\x3e\\n  \x3ctitle\x3eINTRODUCCIÓN A LOS ALGORITMOS\x3c\\\/title\x3e\\n\x3c\\\/head\x3e\\n\x3cbody\x3e\\n  \x3cdiv\x3e\\n    \x3cdiv style\x3d\\\x22padding:5px;20px;\\\x22\x3e\\n      \x3ch1\x3eINTRODUCCIÓN A LOS ALGORITMOS\x3c\\\/h1\x3e\\n      \x3chr\x3e\\n    \x3c\\\/div\x3e\\n  \x3c\\\/div\x3e\\n  \x3cdiv\x3e\\n    \x3cdiv class\x3d\\\x22\\\x22 id\x3d\\\x22\\\x22 name\x3d\\\x22\\\x22 style\x3d\\\x22text-align:left;max-width:500px;margin:30px auto;border:1px solid #ddd;padding:30px;\\\x22\x3e\\n      \x3ch1\x3eMENTALIDADES\x3c\\\/h1\x3e\\n      \x3col\x3e\\n        \x3cli\x3eORIENTACIÓN A FUTURO\x3c\\\/li\x3e\\n        \x3cli\x3eRESPONSABILIDAD PERSONAL\x3c\\\/li\x3e\\n        \x3cli\x3eMENTALIDAD DE CRECIMIENTO\x3c\\\/li\x3e\\n        \x3cli style\x3d\\\x22color:rgba(255,150,0)\\\x22\x3ePERSISTENCIA\x3c\\\/li\x3e\\n      \x3c\\\/ol\x3e\\n      \x3ch2\x3eHABILIDADES\x3c\\\/h2\x3e\\n      \x3col\x3e\\n        \x3cli\x3eTRABAJO EN EQUIPO\x3c\\\/li\x3e\\n        \x3cli style\x3d\\\x22color:red\\\x22\x3eORIENTACIÓN AL DETALLE\x3c\\\/li\x3e\\n        \x3cli\x3eGESTIÓN DEL TIEMPO\x3c\\\/li\x3e\\n        \x3cli\x3eCOMUNICACIÓN\x3c\\\/li\x3e\\n      \x3c\\\/ol\x3e\\n      \x3ch2\x3eAGENDA\x3c\\\/h2\x3e\\n      \x3col\x3e\\n        \x3cli\x3e\x3cb\x3eAPERTURA\x3c\\\/b\x3e\x3c\\\/li\x3e\\n        \x3cli\x3e\x3cb\x3eCONTENIDO:\x3c\\\/b\x3e INTRODUCCIÓN A LOS ALGORITMOS\x3c\\\/li\x3e\\n        \x3cli\x3e\x3cb\x3eCONTENIDO:\x3c\\\/b\x3e ¿QUÉ ES JAVASCRIPT?\x3c\\\/li\x3e\\n        \x3cli\x3e\x3cb\x3eCONTENIDO:\x3c\\\/b\x3e PRIMITIVOS\x3c\\\/li\x3e\\n        \x3cli\x3e\x3cb\x3eCONTENIDO:\x3c\\\/b\x3e VARIABLES \x26 COMENTARIOS\x3c\\\/li\x3e\\n        \x3cli\x3e\x3cb\x3eCONTENIDO:\x3c\\\/b\x3e PALABRAS RESERVADAS EN JAVASCRIPT\x3c\\\/li\x3e\\n        \x3cli\x3e\x3cb\x3ePRÁCTICA:\x3c\\\/b\x3e PRÁCTICA DE CODIFICACIÓN\x3c\\\/li\x3e\\n        \x3cli\x3eCIERRE\x3c\\\/li\x3e\\n      \x3c\\\/ol\x3e\\n      \x3ch2\x3eOBJETIVOS DE APRENDIZAJE\x3c\\\/h2\x3e\\n      \x3col style\x3d\\\x22font-size:20px;\\\x22\x3e\\n        \x3cli\x3eExplicar JavaScript\x3c\\\/li\x3e\\n        \x3cli\x3eExplicar los algoritmos\x3c\\\/li\x3e\\n        \x3cli\x3eExplicar la estructura de un algoritmo\x3c\\\/li\x3e\\n        \x3cli\x3eExplicar los comentarios de código y cómo escribirlos en JavaScript\x3c\\\/li\x3e\\n        \x3cli\x3eDescribir palabras reservadas en JavaScript y dar ejemplos\x3c\\\/li\x3e\\n        \x3cli\x3eExplicar los tipos primitivos y cuándo usar los diferentes tipos\x3c\\\/li\x3e\\n        \x3cli\x3eDescribir las variables clave y su uso\x3c\\\/li\x3e\\n        \x3cli\x3eEscribir programas simples y correctos con JavaScript\x3c\\\/li\x3e\\n      \x3c\\\/ol\x3e\\n    \x3c\\\/div\x3e\\n    \x3cdiv style\x3d\\\x22text-align:center\\\x22\x3e\\n      \x3ch2\x3eAPERTURA ...\x3c\\\/h2\x3e\\n    \x3c\\\/div\x3e\\n    \x3cdiv style\x3d\\\x22text-align:center;padding:30px;\\\x22\x3e\\n      \x3ch2\x3eESTUDIO DE CASO\x3c\\\/h2\x3e\\n      \x3cdiv style\x3d\\\x22font-size:20px;text-align:left;max-width:500px;margin:auto;border:1px solid #ddd;padding:30px;\\\x22\x3e\\n        \x3cp\x3eMaría tiene una entrevista de trabajo para un rol de desarrollador de Java Junior y quiere buscar cómo llegar a la empresa.\x3cbr\x3e\\n        Ella va a Google Maps para buscar la ruta que la llevará de su casa a la empresa.\x3c\\\/p\x3e\\n        \x3cp\x3e¿Qué sucede en la computadora cuando María busca la ubicación?\x3c\\\/p\x3e\\n      \x3c\\\/div\x3e\\n    \x3c\\\/div\x3e\\n    \x3cdiv style\x3d\\\x22text-align:center;padding:30px;\\\x22\x3e\\n      \x3cdiv style\x3d\\\x22font-size:20px;text-align:left;max-width:500px;margin:auto;border:1px solid #ddd;padding:30px;\\\x22\x3e\\n        \x3cp\x3eJavaScript es un lenguaje de programación interpretado, diseñado originalmente para ser utilizado en aplicaciones web en el lado del cliente (es decir, en el navegador web).\x3cbr\x3e\\n        Fue creado en 1995 por Brendan Eich mientras trabajaba en Netscape Communications Corporation.\x3c\\\/p\x3e\\n        \x3cp\x3eJavaScript es un lenguaje de programación muy popular utilizado para crear aplicaciones web, móviles y de escritorio. Se utiliza principalmente para agregar interactividad y dinamismo a las páginas web, permitiendo a los desarrolladores crear efectos visuales, validar formularios, crear animaciones y más.\x3c\\\/p\x3e\\n        \x3cp\x3eAdemás, también se puede utilizar en el lado del servidor con plataformas como Node.js.\x3c\\\/p\x3e\\n        \x3cp\x3eJavaScript es un lenguaje de programación de alto nivel y orientado a objetos, con una sintaxis similar a la de otros lenguajes de programación como Java y C++.\x3c\\\/p\x3e\\n        \x3cp\x3eReferencias:\x3c\\\/p\x3e\\n        \x3cul\x3e\\n          \x3cli\x3e\\n            \x3ca href\x3d\\\x22https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\\\x22\x3eJavaScript\x3c\\\/a\x3e\\n          \x3c\\\/li\x3e\\n          \x3cli\x3e\\n            \x3ca href\x3d\\\x22https:\/\/www.ecma-international.org\/publications-and-standards\/standards\/ecma-262\/\\\x22\x3eECMAScript\x3c\\\/a\x3e\\n          \x3c\\\/li\x3e\\n        \x3c\\\/ul\x3e\x3cbr\x3e\\n        \x3cp\x3e\x3cb\x3ePrimitivos en JavaScript\x3c\\\/b\x3e\x3c\\\/p\x3e\\n        \x3cp\x3eEn programación, los primitivos se refieren a los tipos de datos básicos y simples que se utilizan para construir estructuras de datos más complejas. Los primitivos varían según el lenguaje de programación utilizado, pero suelen incluir tipos de datos como números enteros, números en coma flotante, caracteres y booleanos (valores verdadero\/falso).\x3c\\\/p\x3e\\n        \x3cp\x3eEstos tipos de datos primitivos en JavaScript se utilizan para realizar operaciones y cálculos básicos y se asignan directamente a variables. Además, cada tipo de dato primitivo en JavaScript se trata como un valor inmutable, lo que significa que su valor no puede ser modificado una vez que se ha creado.\x3c\\\/p\x3e\\n        \x3cdiv style\x3d\\\x22color:white;font-size:9\\\x22\x3e\\n          \x3cdiv style\x3d\\\x22background:#353541;padding:5px 10px;font-size:12px;font-weight:bold;\\\x22\x3e\\n            JAVASCRIPT\\n          \x3c\\\/div\x3e\\n          \x3cdiv style\x3d\\\x22background:#000000;padding:5px 10px;\\\x22\x3e\\n            \x3cbr\x3e\\n            \x3cspan style\x3d\\\x22color:#818181\\\x22\x3e\/\/ primitivos previos a ECMAScript6\x3c\\\/span\x3e\x3cbr\x3e\\n            var numero \x3d 100 \x3cspan style\x3d\\\x22color:#818181\\\x22\x3e\/\/ Primitivo: Number, valor(número)\x3c\\\/span\x3e\x3cbr\x3e\\n            var texto \x3d \\\x22Esto es un texto\\\x22 \x3cspan style\x3d\\\x22color:#818181\\\x22\x3e\/\/ Primitivo: String, valor(texto)\x3c\\\/span\x3e\x3cbr\x3e\\n            var verdadero_o_falso \x3d true \x3cspan style\x3d\\\x22color:#818181\\\x22\x3e\/\/ Primitivo: Boolean, valores( true, false)\x3c\\\/span\x3e\x3cbr\x3e\\n            var nulo \x3d null \x3cspan style\x3d\\\x22color:#818181\\\x22\x3e\/\/ Primitivo: Null, valor(null)\x3c\\\/span\x3e\x3cbr\x3e\\n            var indefinido \x3d undefined \x3cspan style\x3d\\\x22color:#818181\\\x22\x3e\/\/ Primitivo: undefined, valor(undefined)\x3c\\\/span\x3e\x3cbr\x3e\\n          \x3c\\\/div\x3e\\n        \x3c\\\/div\x3e\x3cbr\x3e\\n        \x3cdiv style\x3d\\\x22color:white;font-size:9\\\x22\x3e\\n          \x3cdiv style\x3d\\\x22background:#353541;padding:5px 10px;font-size:12px;font-weight:bold;\\\x22\x3e\\n            JAVASCRIPT\\n          \x3c\\\/div\x3e\\n          \x3cdiv style\x3d\\\x22background:#000000;padding:5px 10px;\\\x22\x3e\\n            \x3cbr\x3e\\n            \x3cspan style\x3d\\\x22color:#818181\\\x22\x3e\/\/ primitivos posterior a ECMAScript6\x3c\\\/span\x3e\x3cbr\x3e\\n            var numero \x3d 100 \x3cspan style\x3d\\\x22color:#818181\\\x22\x3e\/\/ Primitivo: Number, valor(número)\x3c\\\/span\x3e\x3cbr\x3e\\n            var texto \x3d \\\x22Esto es un texto\\\x22 \x3cspan style\x3d\\\x22color:#818181\\\x22\x3e\/\/ Primitivo: String, valor(texto)\x3c\\\/span\x3e\x3cbr\x3e\\n            var verdadero_o_falso \x3d true \x3cspan style\x3d\\\x22color:#818181\\\x22\x3e\/\/ Primitivo: Boolean, valores( true, false, null, undefined)\x3c\\\/span\x3e\x3cbr\x3e\\n            var Symbol \x3d true \x3cspan style\x3d\\\x22color:#818181\\\x22\x3e\/\/ Primitivo: Symbol, valor( identificador único )\x3c\\\/span\x3e\x3cbr\x3e\\n          \x3c\\\/div\x3e\\n        \x3c\\\/div\x3e\\n      \x3c\\\/div\x3e\\n    \x3c\\\/div\x3e\\n    \x3cdiv style\x3d\\\x22text-align:center;padding:30px;\\\x22\x3e\\n      \x3cdiv style\x3d\\\x22font-size:20px;text-align:left;max-width:500px;margin:auto;border:1px solid #ddd;padding:30px;\\\x22\x3e\\n        \x3cp\x3e\x3cb\x3eAlgoritmo\x3c\\\/b\x3e\x3c\\\/p\x3e\\n        \x3cp\x3eUn algoritmo es un procedimiento o fórmula para resolver un problema.\x3c\\\/p\x3e\\n        \x3cp\x3eUn algoritmo en JavaScript puede ser definido como una función que toma uno o varios valores de entrada, realiza ciertas operaciones en estos valores y produce un resultado de salida.\x3c\\\/p\x3e\\n        \x3cdiv style\x3d\\\x22color:white;\\\x22\x3e\\n          \x3cdiv style\x3d\\\x22background:#353541;padding:5px 10px;font-size:12px;font-weight:bold;\\\x22\x3e\\n            JAVASCRIPT\\n          \x3c\\\/div\x3e\\n          \x3cdiv style\x3d\\\x22background:#000000;padding:5px 10px;\\\x22\x3e\\n            \x3cbr\x3e\\n            function sumar(a, b) \x7b\x3cbr\x3e\\n            \x26nbsp;\x26nbsp; return a + b;\x3cbr\x3e\\n            \x7d\\n          \x3c\\\/div\x3e\\n        \x3c\\\/div\x3e\\n        \x3cp\x3eLos algoritmos en JavaScript también pueden incluir estructuras de control de flujo como bucles \\\x22for\\\x22 o \\\x22while\\\x22, condicionales \\\x22if\/else\\\x22, y más.\x3c\\\/p\x3e\\n        \x3cp\x3ePor ejemplo, aquí hay un algoritmo que utiliza un bucle \\\x22for\\\x22 para sumar los elementos de un array:\x3c\\\/p\x3e\\n        \x3cdiv style\x3d\\\x22color:white;\\\x22\x3e\\n          \x3cdiv style\x3d\\\x22background:#353541;padding:5px 10px;font-size:12px;font-weight:bold;\\\x22\x3e\\n            JAVASCRIPT\\n          \x3c\\\/div\x3e\\n          \x3cdiv style\x3d\\\x22background:#000000;padding:5px 10px;\\\x22\x3e\\n            \x3cbr\x3e\\n            function sumarArray(array) \x7b\x3cbr\x3e\\n            var suma \x3d 0;\x3cbr\x3e\\n            for (var i \x3d 0; i \x26lt; array.length; i++) \x7b\x3cbr\x3e\\n            \x26nbsp;\x26nbsp; suma +\x3d array\x5bi\x5d;\x3cbr\x3e\\n            \x7d\x3cbr\x3e\\n            \x3cbr\x3e\\n            return suma;\x3cbr\x3e\\n            \x7d\\n          \x3c\\\/div\x3e\\n        \x3c\\\/div\x3e\\n        \x3cp\x3eEn este ejemplo, se define una función llamada \\\x22sumarArray\\\x22 que toma un array como parámetro de entrada.\x3cbr\x3e\\n        La función utiliza un bucle \\\x22for\\\x22 para recorrer cada elemento del array y sumarlos en la variable \\\x22suma\\\x22.\x3cbr\x3e\\n        Finalmente, la función devuelve el valor de la variable \\\x22suma\\\x22.\x3c\\\/p\x3e\\n        \x3cp\x3eEn resumen, los algoritmos en JavaScript se utilizan para resolver problemas o realizar tareas específicas utilizando una serie de pasos precisos y ordenados, que pueden incluir estructuras de control de flujo como bucles y condicionales.\x3c\\\/p\x3e\x3cbr\x3e\\n        \x3cbr\x3e\\n        \x3cp\x3eLa sintaxis general del bucle \x3cb\x3efor\x3c\\\/b\x3e es la siguiente:\x3c\\\/p\x3e\\n        \x3cdiv style\x3d\\\x22color:white;\\\x22\x3e\\n          \x3cdiv style\x3d\\\x22background:#353541;padding:5px 10px;font-size:12px;font-weight:bold;\\\x22\x3e\\n            JAVASCRIPT\\n          \x3c\\\/div\x3e\\n          \x3cdiv style\x3d\\\x22background:#000000;padding:5px 10px;\\\x22\x3e\\n            \x3cbr\x3e\\n            for (inicialización; condición; expresión de iteración) \x7b\x3cbr\x3e\\n            \x26nbsp;\x26nbsp;\x3cspan style\x3d\\\x22color:#818181\\\x22\x3e\/\/ código a ejecutar en cada iteración\x3c\\\/span\x3e\x3cbr\x3e\\n            \x7d\\n          \x3c\\\/div\x3e\\n        \x3c\\\/div\x3e\\n        \x3cp\x3eVeamos cada una de estas partes en detalle:\x3c\\\/p\x3e\\n        \x3col\x3e\\n          \x3cli\x3e\x3cb\x3eInicialización:\x3c\\\/b\x3e Se define una variable y se le asigna un valor inicial. Esta parte del bucle se ejecuta solo una vez, al comienzo de la iteración.\x3c\\\/li\x3e\\n          \x3cli\x3e\x3cb\x3eCondición:\x3c\\\/b\x3e Se establece una condición que se evalúa al principio de cada iteración del bucle. Si la condición se cumple, se ejecuta el código dentro del bucle. Si la condición no se cumple, el bucle se detiene y la ejecución continúa después del bucle.\x3c\\\/li\x3e\\n          \x3cli\x3e\x3cb\x3eExpresión de iteración:\x3c\\\/b\x3e és de cada iteración del bucle, se evalúa esta expresión. Por lo general, se usa para actualizar la variable de inicialización. Esta expresión puede omitirse si no es necesaria.\x3c\\\/li\x3e\\n          \x3cli\x3e\x3cb\x3eCódigo a ejecutar en cada iteración:\x3c\\\/b\x3e Es el código que se ejecuta en cada iteración del bucle.\x3c\\\/li\x3e\\n        \x3c\\\/ol\x3e\\n      \x3c\\\/div\x3e\\n    \x3c\\\/div\x3e\\n    \x3cdiv style\x3d\\\x22text-align:center;padding:30px;\\\x22\x3e\\n      \x3cdiv style\x3d\\\x22font-size:20px;text-align:left;max-width:500px;margin:auto;border:1px solid #ddd;padding:30px;\\\x22\x3e\\n        \x3cp\x3e\x3cb\x3eVariables\x3c\\\/b\x3e\x3c\\\/p\x3e\\n        \x3cp\x3eEn JavaScript, una variable es un contenedor que se utiliza para almacenar valores.\x3cbr\x3e\\n        Las variables en JavaScript se utilizan para hacer referencia a valores que se utilizan en el código\x3cbr\x3e\\n        Las variables pueden ser definidas y redefinidas en cualquier momento durante la ejecución del programa.\x3cbr\x3e\\n        Hay tres maneras de declarar una variable en JavaScript:\x3c\\\/p\x3e\\n        \x3cdiv style\x3d\\\x22color:white;\\\x22\x3e\\n          \x3cdiv style\x3d\\\x22background:#353541;padding:5px 10px;font-size:12px;font-weight:bold;\\\x22\x3e\\n            JAVASCRIPT\\n          \x3c\\\/div\x3e\\n          \x3cdiv style\x3d\\\x22background:#000000;padding:5px 10px;\\\x22\x3e\\n            \x3cbr\x3e\\n            var x \x3d 5;\x3cbr\x3e\\n            let y \x3d \\\x22hola\\\x22; \x3cspan style\x3d\\\x22color:#818181\\\x22\x3e\/\/ introducida en ECMAScript 6\x3c\\\/span\x3e\x3cbr\x3e\\n            const z \x3d true; \x3cspan style\x3d\\\x22color:#818181\\\x22\x3e\/\/ introducida en ECMAScript 6\x3c\\\/span\x3e\x3cbr\x3e\\n          \x3c\\\/div\x3e\\n        \x3c\\\/div\x3e\\n      \x3c\\\/div\x3e\\n    \x3c\\\/div\x3e\\n    \x3cdiv style\x3d\\\x22text-align:center;padding:30px;\\\x22\x3e\\n      \x3cdiv style\x3d\\\x22font-size:20px;text-align:left;max-width:500px;margin:auto;border:1px solid #ddd;padding:30px;\\\x22\x3e\\n        \x3cp\x3e\x3cb\x3eEjercicios\x3c\\\/b\x3e\x3c\\\/p\x3e\\n        \x3cp\x3e- Primitivos\x3c\\\/p\x3e\\n        \x3cp style\x3d\\\x22text-align:right;padding-right:10px;\\\x22\x3econcatenación de primitivos number y string\x3c\\\/p\x3e\\n        \x3cdiv style\x3d\\\x22color:white;\\\x22\x3e\\n          \x3cdiv style\x3d\\\x22background:#353541;padding:5px 10px;font-size:12px;font-weight:bold;\\\x22\x3e\\n            JAVASCRIPT\\n          \x3c\\\/div\x3e\\n          \x3cdiv style\x3d\\\x22background:#000000;padding:5px 10px;\\\x22\x3e\\n            \x3cbr\x3e\\n            \x3cp\x3e\x3cspan style\x3d\\\x22color: #808080;\\\x22\x3e\/\/ Ejemplo 1\x3c\\\/span\x3e\x3cbr\x3e\\n            \x3cspan\x3econsole.log(1 + 1)\x3c\\\/span\x3e\x3cbr\x3e\\n            \x3cspan style\x3d\\\x22color: #808080;\\\x22\x3e\/\/ Ejemplo 2\x3c\\\/span\x3e\x3cbr\x3e\\n            \x3cspan\x3econsole.log(1 + \\\x221\\\x22)\x3c\\\/span\x3e\x3cbr\x3e\\n            \x3cspan style\x3d\\\x22color: #808080;\\\x22\x3e\/\/ Ejemplo 3\x3c\\\/span\x3e\x3cbr\x3e\\n            \x3cspan\x3econsole.log(2 * 3)\x3c\\\/span\x3e\x3cbr\x3e\\n            \x3cspan style\x3d\\\x22color: #808080;\\\x22\x3e\/\/ Ejemplo 4\x3c\\\/span\x3e\x3cbr\x3e\\n            \x3cspan\x3econsole.log(2 * \\\x223\\\x22)\x3c\\\/span\x3e\x3c\\\/p\x3e\\n            \x3cdiv id\x3d\\\x22gtx-trans\\\x22 style\x3d\\\x22position: absolute; left: -18px; top: -20px;\\\x22\x3e\\n              \x26nbsp;\\n            \x3c\\\/div\x3e\\n          \x3c\\\/div\x3e\\n        \x3c\\\/div\x3e\\n        \x3cp style\x3d\\\x22text-align:right;padding-right:10px;\\\x22\x3ecomportamiento de primitivos booleanos null y undefined\x3c\\\/p\x3e\\n        \x3cdiv style\x3d\\\x22color:white;\\\x22\x3e\\n          \x3cdiv style\x3d\\\x22background:#353541;padding:5px 10px;font-size:12px;font-weight:bold;\\\x22\x3e\\n            JAVASCRIPT\\n          \x3c\\\/div\x3e\\n          \x3cdiv style\x3d\\\x22background:#000000;padding:5px 10px;\\\x22\x3e\\n            \x3cp\x3efunction existe(valor) \x7b\x3cbr\x3e\\n            \x26nbsp; \x26nbsp;return !!valor;\x3cbr\x3e\\n            \x26nbsp; \x26nbsp; \x26nbsp; \x26nbsp; \x3cspan style\x3d\\\x22color: #808080;\\\x22\x3e\x26nbsp; \/\/ |\x3c\\\/span\x3e\x3cbr\x3e\\n            \x3cspan style\x3d\\\x22color: #808080;\\\x22\x3e\x26nbsp; \x26nbsp; \x26nbsp; \x26nbsp; \x26nbsp; \/\/ |\x3c\\\/span\x3e\x3cbr\x3e\\n            \x3cspan style\x3d\\\x22color: #808080;\\\x22\x3e\/\/(operador de afirmación !!)\x3c\\\/span\x3e\x3cbr\x3e\\n            \x7d\x3c\\\/p\x3e\\n            \x3cp\x3e\x3cspan style\x3d\\\x22color: #808080;\\\x22\x3e\/\/ Ejemplo 1\x3c\\\/span\x3e\x3cbr\x3e\\n            existe(undefined)\x3c\\\/p\x3e\\n            \x3cp\x3e\x3cspan style\x3d\\\x22color: #808080;\\\x22\x3e\/\/ Ejemplo 2\x3c\\\/span\x3e\x3cbr\x3e\\n            existe(null)\x3c\\\/p\x3e\\n            \x3cp\x3e\x3cspan style\x3d\\\x22color: #808080;\\\x22\x3e\/\/ Ejemplo 3\x3c\\\/span\x3e\x3cbr\x3e\\n            existe(\x27hola\x27)\x3c\\\/p\x3e\\n            \x3cp\x3e\x3cspan style\x3d\\\x22color: #808080;\\\x22\x3e\/\/ Ejemplo 4\x3c\\\/span\x3e\x3cbr\x3e\\n            existe(\x27\x27)\x3c\\\/p\x3e\x3cbr\x3e\\n            \x3cbr\x3e\\n            \x3cp\x3e\x3cspan style\x3d\\\x22color: #808080;\\\x22\x3e\/\/ Ejemplo 5\x3c\\\/span\x3e\x3c\\\/p\x3e\\n            \x3cp\x3efunction seraVerdad()\x7b\x3cbr\x3e\\n            \x26nbsp; \x26nbsp; return 1 \x26gt; 0\x3cbr\x3e\\n            \x7d\x3c\\\/p\x3e\\n            \x3cdiv id\x3d\\\x22gtx-trans\\\x22 style\x3d\\\x22position: absolute; left: -8px; top: -20px;\\\x22\x3e\\n              \x26nbsp;\\n            \x3c\\\/div\x3e\x3cbr\x3e\\n            \x3cbr\x3e\\n            seraVerdad()\x3cbr\x3e\\n            \x3cbr\x3e\\n            \x3cp\x3e\x3cspan style\x3d\\\x22color: #808080;\\\x22\x3e\/\/ Ejemplo 6\x3c\\\/span\x3e\x3c\\\/p\x3e\\n            \x3cp\x3efunction seraVerdad2()\x7b\x3cbr\x3e\\n            \x26nbsp; \x26nbsp; return null \x3d\x3d\x3d 0\x3cbr\x3e\\n            \x7d\x3c\\\/p\x3e\\n            \x3cdiv id\x3d\\\x22gtx-trans\\\x22 style\x3d\\\x22position: absolute; left: -8px; top: -20px;\\\x22\x3e\\n              \x26nbsp;\\n            \x3c\\\/div\x3e\x3cbr\x3e\\n            \x3cbr\x3e\\n            seraVerdad2()\x3cbr\x3e\\n            \x3cbr\x3e\\n            \x3cp\x3e\x3cspan style\x3d\\\x22color: #808080;\\\x22\x3e\/\/ Ejemplo 6\x3c\\\/span\x3e\x3c\\\/p\x3e\\n            \x3cp\x3efunction seraVerdad()\x7b\x3cbr\x3e\\n            \x26nbsp; \x26nbsp; return null \x3d\x3d\x3d undefined\x3cbr\x3e\\n            \x7d\x3c\\\/p\x3e\\n            \x3cdiv id\x3d\\\x22gtx-trans\\\x22 style\x3d\\\x22position: absolute; left: -8px; top: -20px;\\\x22\x3e\\n              \x26nbsp;\\n            \x3c\\\/div\x3e\x3cbr\x3e\\n            \x3cbr\x3e\\n            seraVerdad3()\x3cbr\x3e\\n            \x3cbr\x3e\\n          \x3c\\\/div\x3e\\n        \x3c\\\/div\x3e\\n      \x3c\\\/div\x3e\\n    \x3c\\\/div\x3e\\n    \x3cdiv style\x3d\\\x22text-align:center;padding:30px;\\\x22\x3e\\n      \x3ch2\x3eMatrices\x3c\\\/h2\x3e\\n      \x3cdiv style\x3d\\\x22font-size:20px;text-align:left;max-width:500px;margin:auto;border:1px solid #ddd;padding:30px;\\\x22\x3e\\n        \x3cul\x3e\\n          \x3cli dir\x3d\\\x22ltr\\\x22\x3e\\n            \x3cp dir\x3d\\\x22ltr\\\x22\x3e\x3cspan\x3eLas\x3c\\\/span\x3e \x3cspan\x3ematrices\x3c\\\/span\x3e \x3cspan\x3eson un tipo de\x3c\\\/span\x3e \x3cspan\x3eobjeto\x3c\\\/span\x3e \x3cspan\x3een Javascript. Las matrices son una estructura de datos que contiene una lista de elementos.\x3c\\\/span\x3e\x3c\\\/p\x3e\\n          \x3c\\\/li\x3e\\n        \x3c\\\/ul\x3e\\n        \x3cp\x3e\x3cspan\x3e\x3cspan\x3e\x26nbsp;\x3c\\\/span\x3e\x3c\\\/span\x3e\x3c\\\/p\x3e\\n        \x3cul\x3e\\n          \x3cli dir\x3d\\\x22ltr\\\x22\x3e\\n            \x3cp dir\x3d\\\x22ltr\\\x22\x3e\x3cspan\x3eLa longitud y el tipo de\x3c\\\/span\x3e \x3cspan\x3ematrices Javascript\x3c\\\/span\x3e \x3cspan\x3eno son fijos.\x3c\\\/span\x3e\x3c\\\/p\x3e\\n          \x3c\\\/li\x3e\\n        \x3c\\\/ul\x3e\\n        \x3cp\x3e\x3cspan\x3e\x3cspan\x3e\x26nbsp;\x3c\\\/span\x3e\x3c\\\/span\x3e\x3c\\\/p\x3e\\n        \x3cul\x3e\\n          \x3cli dir\x3d\\\x22ltr\\\x22\x3e\\n            \x3cp dir\x3d\\\x22ltr\\\x22\x3e\x3cspan\x3eCada elemento de una matriz tiene una ubicación llamada\x3c\\\/span\x3e \x3cspan\x3eíndice\x3c\\\/span\x3e\x3cspan\x3e. Podemos acceder a un elemento de la matriz haciendo referencia a su índice.\x3c\\\/span\x3e\x3c\\\/p\x3e\\n          \x3c\\\/li\x3e\\n        \x3c\\\/ul\x3e\\n        \x3cp\x3e\x3cspan\x3e\x3cspan\x3e\x26nbsp;\x3c\\\/span\x3e\x3c\\\/span\x3e\x3c\\\/p\x3e\\n        \x3cul\x3e\\n          \x3cli dir\x3d\\\x22ltr\\\x22\x3e\\n            \x3cp dir\x3d\\\x22ltr\\\x22\x3e\x3cspan\x3eLos\x3c\\\/span\x3e \x3cspan\x3eíndices de la matriz\x3c\\\/span\x3e \x3cspan\x3esiempre comienzan con 0, que apunta al primer elemento de la matriz.\x3c\\\/span\x3e\x3c\\\/p\x3e\\n          \x3c\\\/li\x3e\\n        \x3c\\\/ul\x3e\\n        \x3cul\x3e\\n          \x3cli dir\x3d\\\x22ltr\\\x22\x3e\\n            \x3cp dir\x3d\\\x22ltr\\\x22\x3e\x3cspan id\x3d\\\x22docs-internal-guid-ab0d3169-7fff-9498-a133-f55c50c67a31\\\x22\x3eOrdenamiento\x3c\\\/span\x3e \x3cspan id\x3d\\\x22docs-internal-guid-ab0d3169-7fff-9498-a133-f55c50c67a31\\\x22\x3ees ordenar una lista de elementos.\x3c\\\/span\x3e\x3c\\\/p\x3e\\n          \x3c\\\/li\x3e\\n        \x3c\\\/ul\x3e\\n        \x3cp\x3e\x3cspan id\x3d\\\x22docs-internal-guid-ab0d3169-7fff-9498-a133-f55c50c67a31\\\x22\x3e\x3cspan id\x3d\\\x22docs-internal-guid-ab0d3169-7fff-9498-a133-f55c50c67a31\\\x22\x3e\x26nbsp;\x3c\\\/span\x3e\x3c\\\/span\x3e\x3c\\\/p\x3e\\n        \x3cul\x3e\\n          \x3cli dir\x3d\\\x22ltr\\\x22\x3e\\n            \x3cp dir\x3d\\\x22ltr\\\x22\x3e\x3cspan id\x3d\\\x22docs-internal-guid-ab0d3169-7fff-9498-a133-f55c50c67a31\\\x22\x3eLas matrices en Javascript tienen una función de ordenamiento incorporada. La\x3c\\\/span\x3e \x3cspan id\x3d\\\x22docs-internal-guid-ab0d3169-7fff-9498-a133-f55c50c67a31\\\x22\x3efunción de ordenamiento\x3c\\\/span\x3e \x3cspan id\x3d\\\x22docs-internal-guid-ab0d3169-7fff-9498-a133-f55c50c67a31\\\x22\x3etoma una función de comparación para ordenar elementos.\x26nbsp;\x3c\\\/span\x3e\x3c\\\/p\x3e\\n          \x3c\\\/li\x3e\\n        \x3c\\\/ul\x3e\\n        \x3cp\x3e\x26nbsp;\x3c\\\/p\x3e\\n        \x3cul\x3e\\n          \x3cli dir\x3d\\\x22ltr\\\x22\x3e\\n            \x3cp dir\x3d\\\x22ltr\\\x22\x3e\x3cspan id\x3d\\\x22docs-internal-guid-ab0d3169-7fff-9498-a133-f55c50c67a31\\\x22\x3e\x3c\\\/span\x3e\x3cspan id\x3d\\\x22docs-internal-guid-ab0d3169-7fff-9498-a133-f55c50c67a31\\\x22\x3eLos\x3c\\\/span\x3e \x3cspan id\x3d\\\x22docs-internal-guid-ab0d3169-7fff-9498-a133-f55c50c67a31\\\x22\x3ebucles For\x3c\\\/span\x3e \x3cspan id\x3d\\\x22docs-internal-guid-ab0d3169-7fff-9498-a133-f55c50c67a31\\\x22\x3ese utilizan para iterar a través de una secuencia\/matriz de tipos de datos u objetos. Su ejecución depende de una condición booleana (verdadera o falsa) - si la condición es verdadera, entonces el bucle continúa ejecutándose, pero si la condición es falsa, entonces el bucle se rompe.\x3c\\\/span\x3e\x3c\\\/p\x3e\\n          \x3c\\\/li\x3e\\n        \x3c\\\/ul\x3e\\n      \x3c\\\/div\x3e\\n    \x3c\\\/div\x3e\\n    \x3cdiv style\x3d\\\x22text-align:center;padding:30px;\\\x22\x3e\\n      \x3ch2\x3eObjetos\x3c\\\/h2\x3e\\n      \x3cdiv style\x3d\\\x22font-size:20px;text-align:left;max-width:500px;margin:auto;border:1px solid #ddd;padding:30px;\\\x22\x3e\\n        \x3cul\x3e\\n          \x3cli dir\x3d\\\x22ltr\\\x22\x3e\\n            \x3cp dir\x3d\\\x22ltr\\\x22\x3e\x3cspan id\x3d\\\x22docs-internal-guid-2edb0d91-7fff-e486-0fb2-181684c0a5c8\\\x22\x3eUn\x3c\\\/span\x3e \x3cspan id\x3d\\\x22docs-internal-guid-2edb0d91-7fff-e486-0fb2-181684c0a5c8\\\x22\x3eobjeto\x3c\\\/span\x3e \x3cspan id\x3d\\\x22docs-internal-guid-2edb0d91-7fff-e486-0fb2-181684c0a5c8\\\x22\x3ees una colección de propiedades, definidas como un par clave-valor. Cada propiedad tiene una clave y un valor.\x26nbsp;\x3c\\\/span\x3e\x3c\\\/p\x3e\\n          \x3c\\\/li\x3e\\n        \x3c\\\/ul\x3e\\n        \x3cp\x3e\x3cspan id\x3d\\\x22docs-internal-guid-2edb0d91-7fff-e486-0fb2-181684c0a5c8\\\x22\x3e\x3cspan id\x3d\\\x22docs-internal-guid-2edb0d91-7fff-e486-0fb2-181684c0a5c8\\\x22\x3e\x26nbsp;\x3c\\\/span\x3e\x3c\\\/span\x3e\x3c\\\/p\x3e\\n        \x3cul\x3e\\n          \x3cli dir\x3d\\\x22ltr\\\x22\x3e\\n            \x3cp dir\x3d\\\x22ltr\\\x22\x3e\x3cspan\x3eLa\x3c\\\/span\x3e \x3cspan\x3erefactorización de código\x3c\\\/span\x3e \x3cspan\x3ees el proceso de reestructurar el código de computadora existente sin cambiar su comportamiento externo.\x3c\\\/span\x3e\x3c\\\/p\x3e\\n          \x3c\\\/li\x3e\\n        \x3c\\\/ul\x3e\\n        \x3cp\x3e\x26nbsp;\x3c\\\/p\x3e\\n        \x3cul\x3e\\n          \x3cli dir\x3d\\\x22ltr\\\x22\x3e\\n            \x3cp dir\x3d\\\x22ltr\\\x22\x3e\x3cspan\x3eLa\x3c\\\/span\x3e \x3cspan\x3erefactorización\x3c\\\/span\x3e \x3cspan\x3eestá destinada a mejorar los atributos del código, como la mantenibilidad, la legibilidad y la eficiencia.\x3c\\\/span\x3e\x3c\\\/p\x3e\\n          \x3c\\\/li\x3e\\n        \x3c\\\/ul\x3e\\n      \x3c\\\/div\x3e\\n    \x3c\\\/div\x3e\\n  \x3c\\\/div\x3e\\n\x3c\\\/body\x3e\\n\x3c\\\/html\x3e\x22,\x22ncc\x22:\x22\x7b\\\x22awhs\\\x22:true\x7d\x22\x7d", "AJuLMu05UAEbbJhGyXPhycUkzlmAl3QvZw:1683639804825", undefined, true , false  , "true", "https:\/\/n-6xnwuoovorizp4kjq7a5nesdirucgma4fkaqxoa-0lu-script.googleusercontent.com");}
el.src = 'https:\/\/n-6xnwuoovorizp4kjq7a5nesdirucgma4fkaqxoa-0lu-script.googleusercontent.com\/userCodeAppPanel';
}());
</script>


</body></html>